# -*- coding: utf-8 -*-
"""Princess

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LXyBs0fzpvDvJrpD4PxXltwsTt8FrBxe
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
pd.set_option('display.max_columns', None)
import warnings
warnings.filterwarnings("ignore")
import plotly.express as px

df = pd.read_csv("/content/disney_princess_popularity_dataset_300_rows.csv")

df.head()

df.info()

df[df.isnull().any(axis=1)]
333

"""## **Most Movies Made Year**"""

top_years = df["FirstMovieYear"].value_counts(ascending=False).head(10).reset_index()
plt.figure(figsize=(14,6))
ax = sns.barplot(x='FirstMovieYear', y='count', data=top_years, palette='Set2',order=top_years.sort_values('count', ascending=False)['FirstMovieYear'],edgecolor='black')
plt.xlabel('Year')
plt.ylabel('Number of Movies')
plt.title('Top 10 Years with Most Movies Made')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

bottom_years = df["FirstMovieYear"].value_counts(ascending=False).tail(10).reset_index()

plt.figure(figsize=(14,6))
ax = sns.barplot(x='FirstMovieYear', y='count', data=bottom_years, palette='Set2',
                 order=bottom_years.sort_values('count', ascending=True)['FirstMovieYear'], edgecolor='black')

plt.xlabel('Year')
plt.ylabel('Number of Movies')
plt.title('Bottom 10 Years with Least Movies Made')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

df["FirstMovieYear"].value_counts(ascending=True).head(10).reset_index()

df.sort_values(by="FirstMovieYear", ascending=False).head()

yearly_trend = df["FirstMovieYear"].value_counts().sort_index()
trend_df = yearly_trend.reset_index()
trend_df.columns = ['Year', 'Movie Count']

fig = px.line(
    trend_df,
    x='Year',
    y='Movie Count',
    title='Disney Movie Release Trend by Year',
    markers=True
)

fig.update_traces(mode='lines+markers', hovertemplate='Year: %{x}<br>Movies: %{y}')
fig.update_layout(
    xaxis_title='Release Year',
    yaxis_title='Number of Movies',
    template='plotly_white'
)

fig.show()

df.head()

plt.figure(figsize=(14,10))
fig = px.histogram(df,
                   x='MovieRuntimeMinutes',
                   nbins=20,
                   title='Distribution of Movie Runtimes (in Minutes)',
                   labels={'MovieRuntimeMinutes': 'Runtime (Minutes)'},
                   color_discrete_sequence=['skyblue'])

fig.update_layout(bargap=0.1)
fig.show()

trend_df = df.groupby('FirstMovieYear')['MovieRuntimeMinutes'].mean().reset_index()
fig = px.line(
    trend_df,
    x='FirstMovieYear',
    y='MovieRuntimeMinutes',
    title='Average Movie Runtime by Year',
    markers=True,
    color_discrete_sequence=['red']
)
fig.show()

df.head(2)

plt.figure(figsize=(12,6))
sns.lineplot(x=df['MovieRuntimeMinutes'] , y=df['PopularityScore'], color='orange', marker='o')
plt.title('Movie Runtime Minutes Vs Popularity Score', fontsize=16)
plt.xlabel('MovieRuntimeMinutes', fontsize=13)
plt.ylabel('PopularityScore', fontsize=13)
plt.show()

plt.figure(figsize=(12,6))
sns.boxplot(x=df['NumberOfSongs'], y=df['BoxOfficeMillions'], palette='Blues')
plt.title('Number Of Songs Vs BoxOffice Millions', fontsize=16)
plt.xlabel('NumberOfSongs', fontsize=13)
plt.ylabel('BoxOfficeMillions', fontsize=13)
plt.show()

fig = px.box(df,
             x='OutfitPrimaryColor',
             y='PopularityScore',
             title='Outfit Primary Color vs Popularity Score',
             labels={'OutfitPrimaryColor': 'Outfit Primary Color',
                     'PopularityScore': 'Popularity Score'},
             color='OutfitPrimaryColor')  # Optional: adds color coding

fig.update_layout(
    title_font_size=16,
    xaxis_title_font_size=13,
    yaxis_title_font_size=13,
    showlegend=False,
    width=1000,
    height=600
)

fig.show()

fig = px.box(df,
             x='NumberOfSongs',
             y='BoxOfficeMillions',
             title='Number Of Songs vs Box Office (Millions)',
             labels={'NumberOfSongs': 'Number of Songs',
                     'BoxOfficeMillions': 'Box Office (Millions)'},
             color='NumberOfSongs',  # Optional: colored by number of songs
             color_discrete_sequence=px.colors.sequential.Blues)

fig.update_layout(
    title_font_size=16,
    xaxis_title_font_size=13,
    yaxis_title_font_size=13,
    showlegend=False,
    width=1000,
    height=600
)

fig.show()

fig = px.box(df,
             x='HasSoloSong',
             y='PopularityScore',
             title='Solo Song vs Popularity Score',
             color='HasSoloSong')

fig.update_layout(
    plot_bgcolor='white',
    paper_bgcolor='white',
    showlegend=False
)

fig.show()

corr = df[['RottenTomatoesScore', 'BoxOfficeMillions']].corr().round(2)

fig = px.imshow(corr,
                text_auto=True,
                color_continuous_scale='Viridis',
                zmin=-1, zmax=1,
                title='Correlation: RottenTomatoesScore vs BoxOfficeMillions')

fig.update_layout(
    plot_bgcolor='white',
    paper_bgcolor='white'
)

fig.show()

sns.histplot(df["IsIconic"],kde=True)
plt.show()

num_cols = df.select_dtypes(exclude='object').columns.tolist()
cat_cols = df[df.columns[df.dtypes == 'object']].drop('IsIconic', axis=1).columns.tolist()

for col in num_cols:
    plt.figure(figsize=(10, 6))
    sns.histplot(df[col], kde=True)
    plt.title(f'Distribution of {col}')
    plt.xlabel(col)
    plt.ylabel('Frequency')

for col in num_cols:
    fig = px.box(df, x="IsIconic", y=col, title=f"{col} vs IsIconic")
    fig.show()

for col in cat_cols:
    ct = pd.crosstab(df[col], df['IsIconic'], normalize='index')
    ct = ct.reset_index().melt(id_vars=[col], value_vars=ct.columns, var_name='IsIconic', value_name='Proportion')
    fig = px.bar(ct, x=col, y='Proportion', color='IsIconic',
                 title=f'{col} vs IsIconic', labels={'Proportion': 'Proportion'})
    fig.update_layout(barmode='stack', xaxis_tickangle=45)
    fig.show()



